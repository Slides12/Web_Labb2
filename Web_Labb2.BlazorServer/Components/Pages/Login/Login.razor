@page "/login"
@layout EmptyLayout
@inject APIClient APIClient
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider
@rendermode InteractiveServer

<div class="p-5">
    <EditForm Model="loginModel" FormName="Login" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator/>
        <div class="form-group">
            <label for="username">Username</label>
            <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <InputText id="password" class="form-control" type="password" @bind-Value="loginModel.Password"/>
        </div>
        <button type="submit" class="btn btn-primary mt-3">Login</button>
    </EditForm>
</div>
@code {
    private LoginDTO loginModel = new LoginDTO();

    private async Task HandleLogin()
    {
        var res = await APIClient.PostAsync<AuthResult, LoginDTO>("https://localhost:7218/api/Auth/login", loginModel);
        if(res != null && res.Token != null)
        {
            ((CustomAuthStateProvider)AuthStateProvider).MarkUserAsAuthenticated(res.Token);
            Navigation.NavigateTo("/admin");
        }
    }
}
