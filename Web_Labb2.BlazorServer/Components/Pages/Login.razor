@page "/login"
@inject HttpClient HttpClient
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage
@rendermode InteractiveServer

<h3>Login</h3>

<EditForm Model="loginModel" OnValidSubmit="HandleLogin" FormName="loginForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Username:</label>
        <InputText @bind-Value="loginModel.Username" />
    </div>
    <div>
        <label>Password:</label>
        <InputText @bind-Value="loginModel.Password" type="password" />
    </div>
    <button type="submit">Login</button>
</EditForm>

@code {
    private LoginDTO loginModel = new LoginDTO();

    private async Task HandleLogin()
    {
        var response = await HttpClient.PostAsJsonAsync("https://localhost:7218/api/auth/login", loginModel);

        if (response.IsSuccessStatusCode)
        {
            var authResult = await response.Content.ReadFromJsonAsync<AuthResult>();

            if (!string.IsNullOrEmpty(authResult.Token))
            {
                await LocalStorage.SetItemAsync("authToken", authResult.Token); // Store token in LocalStorage
                Console.WriteLine($"Token Saved: {authResult.Token}"); // Debugging
            }

            Navigation.NavigateTo("/securepage");
        }
        else
        {
            Console.WriteLine("Login failed.");
        }
    }
}
