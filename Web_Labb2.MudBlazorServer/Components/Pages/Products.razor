@page "/products"
@inject HttpClient http



<PageTitle>Products</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Products</MudText>
<MudText Typo="Typo.body1" Class="mb-8">Shows all the products on the server.</MudText>

@if (products == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudTable Items="products" Hover="true" SortLabel="Sort By" Elevation="0" AllowUnsorted="false">
        <HeaderContent>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<ProductDTO, object>(x=>x.ProductName)">Product Name</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<ProductDTO, object>(x=>x.ProductId)">Product Id</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<ProductDTO, object>(x=>x.ProductCategory)">Category</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<ProductDTO, object>(x=>x.Description!)">Description</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="ProductName">@context.ProductName</MudTd>
            <MudTd DataLabel="ProductId">@context.ProductId</MudTd>
            <MudTd DataLabel="ProductCategory">@context.ProductCategory</MudTd>
            <MudTd DataLabel="Description">@context.Description</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{50, 100}" />
        </PagerContent>
    </MudTable>
}

@code {


        List<ProductDTO> products = new List<ProductDTO>();



    protected override async Task OnInitializedAsync()
    {


        var startDate = DateOnly.FromDateTime(DateTime.Now);
        var summaries = new[] { "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching" };

        products = await http.GetFromJsonAsync<List<ProductDTO>>("https://localhost:7218/api/Product");
    }

    private class WeatherForecast
    {
        public DateOnly Date { get; set; }
        public int TemperatureC { get; set; }
        public string? Summary { get; set; }
        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
