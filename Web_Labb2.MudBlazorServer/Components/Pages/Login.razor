@page "/login"
@inject HttpClient http
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider



<MudCard Class="pa-4">
    <MudCardContent>
        <MudText Typo="Typo.h5">Login</MudText>

        <MudTextField Label="Username" @bind-Value="login.Username" Required="true" />
        <MudTextField Label="Password" @bind-Value="login.Password" Required="true" InputType="InputType.Password" />

        <MudButton OnClick="LoginUser" Color="Color.Primary" Variant="Variant.Filled">Login</MudButton>

        <MudAlert Severity="Severity.Error" Visible="@showError">@errorMessage</MudAlert>
    </MudCardContent>
</MudCard>

@code {
    private LoginDTO login = new LoginDTO();
    private bool showError = false;
    private string errorMessage = "";


    private async Task LoginUser()
    {
        showError = false;

        var response = await http.PostAsJsonAsync("https://localhost:7218/api/Auth/login", login);

        if(response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<AuthResponse>();
            if(result != null)
            {
                await ((AuthStateProvider)AuthStateProvider).MarkUserAsAuthenticated(result.Token);
                Navigation.NavigateTo("/dashboard");
            }
        }
        else
        {
            showError = true;
            errorMessage = "Invalid email or password!";
        }
    }
}
