@page "/"
@inject APIClient APIClient
@inject AuthenticationStateProvider AuthProvider
@inject NavigationManager Navigation

<PageTitle>For love of technology - D-inet</PageTitle>

<MudStack Justify="Justify.Center" AlignItems="AlignItems.Center">

    <MudCarousel Class="mud-width-full" @ref="_carousel" ItemsSource="@products" @bind-SelectedIndex="selectedIndex" Style="height:400px;" ShowArrows="true" ShowBullets="true" EnableSwipeGesture="true" AutoCycle="true">
        <ItemTemplate>
            <div class="d-flex flex-column justify-center align-items-center" style="height:100%">
                <MudButton @onclick="() => GoToProductPage(context.ProductId)" Color="Color.Dark">
                    <MudStack>
                        <img src="@context.ImagePath" alt="@context.ProductName" style="max-height:300px; object-fit:contain;" />
                        <MudText Align="@Align.Center" Class="mt-2">@context.ProductName</MudText>
                    </MudStack>
                </MudButton>
            </div>
        </ItemTemplate>
    </MudCarousel>



    <MudText Class="mb-8">Your pc favourite website for all PC things.</MudText>

    <MudAlert Severity="Severity.Normal" Variant="Variant.Outlined" NoIcon="true" Class="my-2">
        <MudButton Href="/all-products">You can find all products here.</MudButton>
    </MudAlert>

    <MudText Typo="Typo.h5" GutterBottom="true">Categories</MudText>

    <MudStack Row=true>
        <MudList T="ProductDTO">
            @foreach(var product in products)
            {
                <MudButton @onclick="() => GoToCategoryPage(product.ProductCategory)" Variant="Variant.Outlined" Size="Size.Large">@product.ProductCategory</MudButton>
            }
            <MudItem>
            </MudItem>
        </MudList>
    </MudStack>

</MudStack>


@code
{
    private Random rnd = new Random();
    private MudCarousel<ProductDTO> _carousel;
    private int selectedIndex = 0;
    private List<ProductDTO> products = new List<ProductDTO>();

    protected async override Task OnInitializedAsync()
    {
        products = await APIClient.GetFromJsonAsync<List<ProductDTO>>("https://localhost:7218/api/Product");
        selectedIndex = rnd.Next(0, products.Count);
    }

    private void GoToProductPage(string productId)
    {
        Navigation.NavigateTo($"/product-page/{productId}");
    }

    private void GoToCategoryPage(string category)
    {
        Navigation.NavigateTo($"/categories/{category}");
    }
  
}